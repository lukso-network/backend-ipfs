replicaCount: 3

images:
  ipfs: "ipfs/go-ipfs:v0.7.0"
  ipfsCluster: "ipfs/ipfs-cluster:v0.13.0"

imagePullSecrets: []
podAnnotations: {}
podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

certificateIssuer:
  name: lets-encrypt
  email: hello@lukso.network
service:
  type: NodePort
  ports:
    - name: swarm
      port: 4001
    - name: http
      port: 8080
    - name: proxy-http
      port: 9095

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, PUT, POST"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "120"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "120"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "16"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "64k"
    nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
  tls:
   - secretName: lukso-ipfs-cluster-tls
     hosts:
       - ipfs.lukso.network
  hosts:
    - host: ipfs.lukso.network
      paths:
        - path: /ipfs
          backend:
            servicePort: 8080
        - path: /ipns
          backend:
            servicePort: 8080

resources: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}
tolerations: []
affinity: {}
