jobs:
  deploy:
    executor: gcp-gke/default
    parameters:
      cluster-name:
        description: "Cluster name"
        type: string
      environment:
        default: "staging"
        description: Environment to deploy to
        type: string
    steps:
      - checkout
      - add_ssh_keys
      - gcp-gke/install
      - gcp-gke/update-kubeconfig-with-credentials:
          cluster: <<parameters.cluster-name>>
          perform-login: true
      - helm/install-helm-client:
          version: v3.2.4
      - run:
          name: Install helm-helmfile
          command: |
            wget https://github.com/roboll/helmfile/releases/download/v0.138.7/helmfile_linux_amd64
            mv helmfile_linux_amd64 helmfile
            chmod +x helmfile
            sudo wget https://github.com/mozilla/sops/releases/download/v3.6.1/sops-v3.6.1.linux -O /usr/local/bin/sops
            sudo chmod +x /usr/local/bin/sops
            SKIP_SOPS_INSTALL=true helm plugin install https://github.com/jkroepke/helm-secrets
            curl -L https://github.com/databus23/helm-diff/releases/download/v3.1.3/helm-diff-linux.tgz | tar -C /home/circleci/.local/share/helm/plugins -xzv
            export GOOGLE_APPLICATION_CREDENTIALS="/home/circleci/gcloud-service-key.json"
            ./helmfile --environment <<parameters.environment>> apply
  test:
    executor: node/default
    parameters:
      environment:
        default: "staging"
        description: Environment to test on
        type: string
    steps:
      - checkout
      - node/install-packages
      - run: npm run test:<<parameters.environment>>

version: 2.1
orbs:
  helm: circleci/helm@1.2.0
  gcp-gke: circleci/gcp-gke@1.2.0
  node: circleci/node@4.2.0
workflows:
  deployment-staging:
    jobs:
      - deploy:
          name: staging-deployment
          cluster-name: ipfs-cluster
          environment: staging
          filters: &filters-staging
            branches:
              only: main
      - test:
          requires:
            - staging-deployment
          filters:
            <<: *filters-staging
  deployment-production:
    jobs:
      - deploy:
          name: prod-deployment
          cluster-name: ipfs-cluster
          environment: prod
          filters: &filters-production
            branches:
              ignore: /.*/
            tags:
              only: /^production.*/
      - test:
          requires:
            - prod-deployment
          filters:
            <<: *filters-production
